{
  "swagger": "2.0",
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "https",
    "https"
  ],
  "info": {
    "title": "Auth0 Authorization API",
    "version": "0.0.1"
  },
  "security": [
    {
      "auth0_jwk": []
    }
  ],
  "securityDefinitions": {
    "auth0_jwk": {
      "x-google-jwks_uri": "https://gridarrow.auth0.com/.well-known/jwks.json",
      "type": "oauth2",
      "x-google-issuer": "https://gridarrow.auth0.com/",
      "flow": "implicit",
      "authorizationUrl": ""
    }
  },
  "tags": [],
  "paths": {
    "/api/groups": {
      "get": {
        "summary": "Get all groups in the system.",
        "operationId": "getApiGroups",
        "parameters": [
          {
            "type": "string",
            "default": "",
            "maxLength": 1000,
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "default": "",
            "maxLength": 1000,
            "name": "field",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "post": {
        "summary": "Create a new group.",
        "operationId": "postApiGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Group",
              "type": "object"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/permissions": {
      "get": {
        "summary": "Get all permissions in the system.",
        "operationId": "getApiPermissions",
        "parameters": [
          {
            "type": "string",
            "default": "",
            "maxLength": 1000,
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "default": "",
            "maxLength": 1000,
            "name": "field",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PermissionList",
              "type": "array"
            },
            "description": "Successful"
          }
        }
      },
      "post": {
        "summary": "Create a new permission.",
        "operationId": "postApiPermissions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Permission"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Permission",
              "type": "object"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/roles": {
      "get": {
        "summary": "Get all roles in the system.",
        "operationId": "getApiRoles",
        "parameters": [
          {
            "type": "string",
            "default": "",
            "maxLength": 1000,
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "default": "",
            "maxLength": 1000,
            "name": "field",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RoleList",
              "type": "array"
            },
            "description": "Successful"
          }
        }
      },
      "post": {
        "summary": "Create a new role.",
        "operationId": "postApiRoles",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Role",
              "type": "object"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/groups/{id}": {
      "get": {
        "summary": "Get a single group based on its unique identifier. Add \"?expand\" to also load all roles and permissions for this group.",
        "operationId": "getApiGroupsId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Group",
              "type": "object"
            },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Delete a group.",
        "operationId": "deleteApiGroupsId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "Update a group.",
        "operationId": "putApiGroupsId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Group",
              "type": "object"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/permissions/{id}": {
      "get": {
        "summary": "Get a single permission based on its unique identifier.",
        "operationId": "getApiPermissionsId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Permission",
              "type": "object"
            },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Delete a permission.",
        "operationId": "deleteApiPermissionsId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "Update a permission.",
        "operationId": "putApiPermissionsId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Permission"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Permission",
              "type": "object"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "summary": "Get a single role based on its unique identifier.",
        "operationId": "getApiRolesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Role",
              "type": "object"
            },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Delete a role.",
        "operationId": "deleteApiRolesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "Update a role.",
        "operationId": "putApiRolesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Role",
              "type": "object"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/groups/{id}/mappings": {
      "get": {
        "summary": "Get the mappings for a group.",
        "operationId": "getApiGroupsIdMappings",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "patch": {
        "summary": "Create one or more mappings in a group.",
        "operationId": "patchApiGroupsIdMappings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Mappings"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Delete one or more group mappings from a group.",
        "operationId": "deleteApiGroupsIdMappings",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Guids"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/groups/{id}/members": {
      "get": {
        "summary": "Get the members for a group.",
        "operationId": "getApiGroupsIdMembers",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "default": 25,
            "minimum": 1,
            "maximum": 25,
            "name": "per_page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "name": "page",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserList",
              "type": "array"
            },
            "description": "Successful"
          }
        }
      },
      "patch": {
        "summary": "Add one or more members in a group.",
        "operationId": "patchApiGroupsIdMembers",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/UserIds"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Delete one or more members from a group.",
        "operationId": "deleteApiGroupsIdMembers",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/UserIds"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/groups/{id}/roles": {
      "get": {
        "summary": "Get the roles for a group.",
        "operationId": "getApiGroupsIdRoles",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RoleList",
              "type": "array"
            },
            "description": "Successful"
          }
        }
      },
      "patch": {
        "summary": "Add one or more roles to a group.",
        "operationId": "patchApiGroupsIdRoles",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Guids"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Delete one or more roles from a group.",
        "operationId": "deleteApiGroupsIdRoles",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Guids"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/groups/{id}/nested": {
      "get": {
        "summary": "Get the nested groups for a group.",
        "operationId": "getApiGroupsIdNested",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "patch": {
        "summary": "Add one or more nested groups in a group.",
        "operationId": "patchApiGroupsIdNested",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Guids"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Delete one or more nested groups from a group.",
        "operationId": "deleteApiGroupsIdNested",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Guids"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/users/{id}/roles": {
      "get": {
        "summary": "Get the roles for a user.",
        "operationId": "getApiUsersIdRoles",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RoleList",
              "type": "array"
            },
            "description": "Successful"
          }
        }
      },
      "patch": {
        "summary": "Add a single user to roles.",
        "operationId": "patchApiUsersIdRoles",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Guids"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Remove a single user from roles.",
        "operationId": "deleteApiUsersIdRoles",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Guids"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/users/{id}/groups": {
      "get": {
        "summary": "Get the groups for a user. Add \"?expand\" to also load all roles and permissions for these groups.",
        "operationId": "getApiUsersIdGroups",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GroupList",
              "type": "array"
            },
            "description": "Successful"
          }
        }
      },
      "patch": {
        "summary": "Add a single user to groups.",
        "operationId": "patchApiUsersIdGroups",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Guids"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/groups/{id}/roles/nested": {
      "get": {
        "summary": "Get the nested roles for a group.",
        "operationId": "getApiGroupsIdRolesNested",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RoleList",
              "type": "array"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/groups/{id}/members/nested": {
      "get": {
        "summary": "Get the nested members for a group.",
        "operationId": "getApiGroupsIdMembersNested",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "default": 25,
            "minimum": 1,
            "maximum": 25,
            "name": "per_page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "name": "page",
            "in": "query"
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserList",
              "type": "array"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/users/{id}/groups/calculate": {
      "get": {
        "summary": "Calculate the group memberships for a user (including nested groups).",
        "operationId": "getApiUsersIdGroupsCalculate",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GroupList",
              "type": "array"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/users/{id}/roles/calculate": {
      "get": {
        "summary": "Calculate the roles assigned to the user (including through group memberships).",
        "operationId": "getApiUsersIdRolesCalculate",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RoleList",
              "type": "array"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/api/users/{userId}/policy/{clientId}": {
      "post": {
        "summary": "Execute the authorization policy for a user in the context of a client. This will return the user's groups but also roles and permissions that apply to the current client.",
        "operationId": "postApiUsersUseridPolicyClientid",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "clientId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/PolicyRequest"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    }
  },
  "definitions": {
    "Permission": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "applicationType": {
          "type": "string",
          "enum": [
            "client",
            "resource_server"
          ]
        },
        "applicationId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        }
      },
      "required": [
        "name",
        "description",
        "applicationType",
        "applicationId"
      ]
    },
    "PermissionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Permission",
        "type": "object"
      }
    },
    "permissions": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string",
        "x-format": {
          "guid": true
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "applicationType": {
          "type": "string",
          "enum": [
            "client",
            "resource_server"
          ]
        },
        "applicationId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "permissions": {
          "$ref": "#/definitions/permissions",
          "type": "array"
        }
      },
      "required": [
        "name",
        "description",
        "applicationType",
        "applicationId"
      ]
    },
    "RoleList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Role",
        "type": "object"
      }
    },
    "Group": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "identities": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "provider": {
          "type": "string"
        },
        "connection": {
          "type": "string"
        },
        "isSocial": {
          "type": "boolean"
        }
      },
      "required": [
        "user_id",
        "provider",
        "connection",
        "isSocial"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-format": {
            "email": true
          }
        },
        "email_verified": {
          "type": "boolean"
        },
        "user_id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "picture": {
          "type": "string",
          "minLength": 1,
          "maxLength": 500
        },
        "identities": {
          "$ref": "#/definitions/identities",
          "type": "object"
        },
        "updated_at": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "last_ip": {
          "type": "string"
        },
        "last_login": {
          "type": "string"
        },
        "logins_count": {
          "type": "number"
        }
      },
      "required": [
        "email",
        "email_verified",
        "user_id"
      ]
    },
    "UserList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User",
        "type": "object"
      }
    },
    "GroupList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Group",
        "type": "object"
      }
    },
    "groups": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "PolicyRequest": {
      "type": "object",
      "properties": {
        "connectionName": {
          "type": "string"
        },
        "groups": {
          "$ref": "#/definitions/groups",
          "type": "array"
        }
      },
      "required": [
        "connectionName"
      ]
    },
    "Guids": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "x-format": {
          "guid": true
        }
      }
    },
    "Mapping": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        },
        "connectionName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        }
      },
      "required": [
        "groupName",
        "connectionName"
      ]
    },
    "Mappings": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/Mapping",
        "type": "object"
      }
    },
    "UserIds": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string"
      }
    }
  }
}